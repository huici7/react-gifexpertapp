{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFectchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAlBpB,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCRdK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCCZO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OAFAN,QAAQC,IAAKc,EAAIC,EAAOV,GAGpB,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECNwB,SAAEA,GAE1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WACPxB,EAAUC,GACLwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDb0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAIYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIC,aEnB5BgB,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KASA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ6C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAASA,SAAWA,GAAgBA,Y,MCnB5D6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.affe8463.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        console.log(e.target.value)\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if( inputValue.trim().length > 2){\n            setCategories( cats => [inputValue, ...cats] )\n            setInputValue('')\n        }\n        //setCategories( cats => [...cats, inputValue] )\n        //console.log('submit hecho')\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n    export const getGifts = async( category ) => {\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=dHLsNqPZa7z3SOSI3WH2aPT9uxrWFACN`\n        const resp = await fetch( url )\n        const {data} = await resp.json()\n\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n\n        return gifs\n    }","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n    \n    console.log( id, title, url )\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useFetchGifs } from '../hooks/useFectchGifs'\nimport { GifGridItem } from './GifGridItem'\n\n\n\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs(category)\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n\n            <div className=\"card-grid\">\n\n\n                    {\n                        images.map( img => (\n                            <GifGridItem \n                                key={img.id}\n                                { ...img }\n                            />\n                        ))\n                    }\n\n                </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifts } from \"../helpers/getGifts\"\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n        getGifts( category )\n            .then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n\n            })\n    }, [category])\n\n    return state\n}","import React, { useState } from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\nexport const GifExpertApp = () => {\n\n    //const categories = ['One punch', 'Samurai X', 'Dragon Ball']\n    const [categories, setCategories] = useState(['One punch'])\n\n    /*const handleAdd = () => {\n\n        //setCategories( [...categories, 'HunterXHunter'] )\n        setCategories( cats => [...cats, 'HunterXHunter'] )\n\n    }*/\n\n    return(\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid category={ category } key={category} />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './components/GifExpertApp'\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}